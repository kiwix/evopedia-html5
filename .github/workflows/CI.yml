name: CI

on:
  - push
  - pull_request
  # Allow running manually
  - workflow_dispatch

jobs:

  # Tests the list of offline files in the Service Worker and compares it to the contents of the www directory
  tests-unit-build-windows:
    # We want to run on external PRs, but not on our own internal PRs as they'll be run by the push to the branch
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: npm ci

      - name: Test the list of offline files in Service Worker
        shell: pwsh
        run: ./scripts/Check-OfflineFilesList.ps1

      - name: Test that the app can be built
        shell: pwsh
        run: npm run build

      - name: Unit tests (Windows)
        run: npm run test-unit-browsers


  # This job runs always, including for remote pull requests, and
  # has external dependencies or special permission needs, besides a
  # local install of Node.js, Firefox, and Chromium or Chrome.
  #
  # You can run these same tests locally in your own developer
  # environment via `npm ci && npm test`.

  tests-unit-linux:
    # We want to run on external PRs, but not on our own internal PRs as they'll be run by the push to the branch
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    runs-on: ubuntu-20.04
    steps:
      # Clone the repo and checkout the commit for which the workflow was triggered
      - uses: actions/checkout@v3

      - name: Test integrity of app parameters
        shell: bash
        run: |
          # Check that values of assetsCache and appVersion are correctly duplicated
          chmod +x ./scripts/test_duplicate_values.sh
          ./scripts/test_duplicate_values.sh
          # Check that PWAServer is correctly set in app.js
          chmod +x ./scripts/test_pwa_server.sh
          ./scripts/test_pwa_server.sh

      - name: Install dependencies
        run: npm ci

      - name: Unit tests (Linux)
        run: npm run test-unit-browsers
        
  tests-unit-mac:
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    runs-on: macos-latest
    steps:
      # Clone the repo and checkout the commit for which the workflow was triggered
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: npm ci

      - name: Unit tests (Mackintosh)
        run: npm run test-unit-browsers
  